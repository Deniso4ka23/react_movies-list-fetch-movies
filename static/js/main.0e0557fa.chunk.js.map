{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","onAdd","useState","setQuery","setMovie","isLoading","setLoading","isNotFindMovie","setNotFindMovie","isEnabled","getNewMovie","Poster","Title","Plot","imdbID","newMovie","id","Math","random","loadMovie","a","fetchMovie","onSubmit","e","preventDefault","htmlFor","type","placeholder","value","onChange","target","classNames","onClick","disabled","App","setMovies","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e0557fa.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl\n            || 'https://via.placeholder.com/360x270.png?text=no%20preview'}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={`https://www.imdb.com/title/${movie.imdbUrl}`} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=878802db';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","/* eslint-disable no-console */\n/* eslint-disable max-len */\n/* eslint-disable no-prototype-builtins */\nimport React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { MovieData } from '../../types/MovieData';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setLoading] = useState(false);\n  const [isNotFindMovie, setNotFindMovie] = useState(false);\n\n  const isEnabled = query;\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n  };\n\n  const getNewMovie = ({\n    Poster,\n    Title,\n    Plot,\n    imdbID,\n  }: MovieData) => {\n    const newMovie = {\n      title: Title,\n      description: Plot,\n      imdbId: imdbID,\n      imgUrl: Poster === 'N/A' ? 'https://via.placeholder.com/360x270.png?text=no%20preview' : Poster,\n      imdbUrl: imdbID,\n      id: Math.random(),\n    };\n\n    setMovie(newMovie);\n  };\n\n  const loadMovie = async () => {\n    setLoading(true);\n    try {\n      const fetchMovie = await getMovie(query);\n\n      if ('Error' in fetchMovie) {\n        throw new Error('error');\n      } else {\n        getNewMovie(fetchMovie as MovieData);\n      }\n    } catch (error) {\n      setNotFindMovie(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(e) => {\n                setQuery(e.target.value);\n                setNotFindMovie(false);\n              }}\n            />\n          </div>\n\n          {isNotFindMovie && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': isLoading },\n              )}\n              onClick={loadMovie}\n              disabled={!isEnabled}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  onAdd(movie);\n                  setQuery('');\n                  setMovie(null);\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addNewMovie = (newMovie: Movie) => {\n    const isUniqueMovie = !movies\n      .some(movie => movie.imdbId === newMovie.imdbId);\n\n    if (isUniqueMovie) {\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onAdd={addNewMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}